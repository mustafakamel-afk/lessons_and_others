service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read, write: if request.auth == null; «Ê !=null ›Ì Õ«· «—œ  ›ﬁÿ «·„”Ã·Ì‰ Ì—›⁄Ê‰ «·„·›«  
    }
  }
}
=====================================================
 compile files('picasso-2.5.2.jar')
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.firebase:firebase-core:15.0.0'
    compile 'com.google.firebase:firebase-database:15.0.0'
    compile 'com.google.firebase:firebase-auth:15.1.0'
    compile 'com.google.android.gms:play-services-auth:15.0.1'
    compile 'com.google.firebase:firebase-messaging:15.0.2'
    compile 'com.google.firebase:firebase-storage:15.0.2'
    testCompile 'junit:junit:4.12'
=================================================
  <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
===========================================================
package com.example.ham.example;

import android.app.ProgressDialog;
import android.content.Intent;
import android.net.Uri;
import android.provider.MediaStore;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.Toast;
import java.util.Calendar;


import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import com.google.firebase.storage.UploadTask;
import com.squareup.picasso.Picasso;

public class upload extends AppCompatActivity {

    ImageView selectImage,viewTheImage;

    private StorageReference storageReference;
    private Uri uri;
    private ProgressDialog progressDialog;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_upload);

        selectImage  = (ImageView) findViewById(R.id.selectImage);
        viewTheImage = (ImageView)findViewById(R.id.viewTheImage);

        progressDialog  = new ProgressDialog(this);

        storageReference = FirebaseStorage.getInstance().getReference();  //ÌÃ» «·—«»ÿ «·Œ«’ »ﬂ ›Ì firebase

    }

    public void selectImage(View view) {

        Intent gallery = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult(gallery, 200);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == 200 && resultCode == RESULT_OK && data!=null){

            Uri uri_image = data.getData();

            selectImage.setImageURI(uri_image);

              uri = uri_image;

            Toast.makeText(getApplicationContext(), uri_image.toString(), Toast.LENGTH_LONG).show();

        }

    }
    public void uploadImage(View view) {

        Calendar calendar = Calendar.getInstance();

        progressDialog.setMessage("Ã«—Ì «·—›⁄....");
        progressDialog.show();

        StorageReference filepath = storageReference.child("photos").child("img_" + calendar.getTimeInMillis());
        //Â–« «·ﬂÊœ Ì÷⁄ «·’Ê— ›Ì „Ã·œ photos ÌÃ⁄· ·Â «”„ ⁄‘Ê«∆Ì

        filepath.putFile(uri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
            @Override
            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {

                progressDialog.dismiss();
                Toast.makeText(upload.this, " „ —›⁄ «·’Ê—…", Toast.LENGTH_SHORT).show();

                Picasso.with(getApplicationContext()).load(taskSnapshot.getDownloadUrl()).into(viewTheImage);
            }
        }).addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(@NonNull Exception e) {
                progressDialog.dismiss();
                Toast.makeText(upload.this, "ÌÊÃœ Œÿ√ ·„ Ì „ —›⁄ «·’Ê—…", Toast.LENGTH_SHORT).show();
            }
        });
    }


}